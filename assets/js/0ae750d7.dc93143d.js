"use strict";(self.webpackChunkwpyoga_docusaurus_blog=self.webpackChunkwpyoga_docusaurus_blog||[]).push([[9429],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),c=o,g=d["".concat(l,".").concat(c)]||d[c]||h[c]||r;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3549:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},assets:function(){return p},toc:function(){return h},default:function(){return c}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),i=["components"],s={title:"Making a new blog with Docusaurus v2",tags:["docusaurus","blog"]},l=void 0,u={permalink:"/blog/2021/06/12/docusaurus-install",editUrl:"https://github.com/wpyoga/wpyoga.github.io/edit/master/blog/2021-06-12-docusaurus-install.md",source:"@site/blog/2021-06-12-docusaurus-install.md",title:"Making a new blog with Docusaurus v2",description:"To make a new blog with the upcoming Docusaurus 2, we need understand how GitHub Pages works, and also pay attention to several caveats.",date:"2021-06-12T00:00:00.000Z",formattedDate:"June 12, 2021",tags:[{label:"docusaurus",permalink:"/blog/tags/docusaurus"},{label:"blog",permalink:"/blog/tags/blog"}],truncated:!0,authors:[],prevItem:{title:"Deploying Docusaurus site to GitHub the easy way",permalink:"/blog/2021/06/12/docusaurus-deploy"},nextItem:{title:"Problem with inotifywait, VSCode, and Maven",permalink:"/blog/2021/05/08/inotifywait-problem"}},p={authorsImageUrls:[]},h=[{value:"How GitHub Pages works and how to use it",id:"how-github-pages-works-and-how-to-use-it",children:[{value:"Deploy",id:"deploy",children:[],level:3}],level:2},{value:"Further discussion",id:"further-discussion",children:[{value:"Manually deploying to a branch",id:"manually-deploying-to-a-branch",children:[],level:3},{value:"Another method of deploying manually doesn&#39;t work well",id:"another-method-of-deploying-manually-doesnt-work-well",children:[],level:3},{value:"How GitHub Pages really works",id:"how-github-pages-really-works",children:[],level:3},{value:"Serving GitHub Pages from a subdirectory",id:"serving-github-pages-from-a-subdirectory",children:[],level:3},{value:"Following GitHub conventions",id:"following-github-conventions",children:[],level:3},{value:"Moving source code back to the master branch",id:"moving-source-code-back-to-the-master-branch",children:[],level:3},{value:"Changing usernames or organization names",id:"changing-usernames-or-organization-names",children:[],level:3}],level:2}],d={toc:h};function c(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To make a new blog with the upcoming Docusaurus 2, we need understand how GitHub Pages works, and also pay attention to several caveats."),(0,r.kt)("h2",{id:"how-github-pages-works-and-how-to-use-it"},"How GitHub Pages works and how to use it"),(0,r.kt)("p",null,"GitHub Pages sites serve its root as static content from a directory on a selected branch of the special repository ",(0,r.kt)("inlineCode",{parentName:"p"},"_username_.github.io")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"_organization_.github.io"),". If there is an ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")," file, then it will be used. Otherwise, ",(0,r.kt)("inlineCode",{parentName:"p"},"README.md")," will be served -- but see ",(0,r.kt)("a",{parentName:"p",href:"#how-github-pages-really-works"},"this note"),"."),(0,r.kt)("p",null,"For example, I have the username ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyoga")," on GitHub. My GitHub Pages site is ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyoga.github.io"),", and it serves its root ",(0,r.kt)("inlineCode",{parentName:"p"},"https://wpyoga.github.io/")," as static content from the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch of the repository ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyoga.github.io")," in my account."),(0,r.kt)("p",null,"As of 2021-06-12, the special repository ",(0,r.kt)("inlineCode",{parentName:"p"},"_username_.github.io")," defaults to serving GitHub Pages from the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch, and other repositories default to serving from the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch. This means that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"on repositories other than the special repository, if you push to the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch, and no branch has been configured to serve the GitHub Pages site, then GitHub will automatically designate the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch for GitHub Pages, and serve the site from the repository's root directory.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"on the special repository, pushing to the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch will trigger the same mechanism. Pushing to the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch will not trigger this mechanism."))),(0,r.kt)("p",null,"Note that this designated branch contains the generated static content, not the raw Markdown and the sources. So if you use Docusaurus (or Jekyll) to generate the static site from Markdown documents, then the designated branch should not contain the sources, but only the generated (built) content. Docusaurus follows GitHub Pages' convention, so by default it will try to publish the generated content in the ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," directory of the source tree to the designated branch, according to the repository name."),(0,r.kt)("p",null,"However, my preferred method is to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch for the source tree, and push my generated content to the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch. Note that for the special repository, the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch doesn't trigger the automatic mechanism above, so I had to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wpyoga/wpyoga.github.io/settings/branches"},"manually configure it"),". Alternatively, you can also ",(0,r.kt)("a",{parentName:"p",href:"#following-github-conventions"},"follow GitHub conventions"),"."),(0,r.kt)("h3",{id:"deploy"},"Deploy"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"yarn deploy")," will build and deploy the site:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ GIT_USER=wpyoga DEPLOYMENT_BRANCH=gh-pages USE_SSH=true yarn deploy\n")),(0,r.kt)("p",null,"It doesn't look pretty, and it's not easy to remember. Fortunately, I have ",(0,r.kt)("a",{parentName:"p",href:"/blog/2021/06/12/docusaurus-deploy"},"a better solution"),"."),(0,r.kt)("h2",{id:"further-discussion"},"Further discussion"),(0,r.kt)("h3",{id:"manually-deploying-to-a-branch"},"Manually deploying to a branch"),(0,r.kt)("p",null,"First, checkout the site serving branch (",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," in our example) to a temporary directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git worktree add --no-checkout /tmp/build gh-pages\n")),(0,r.kt)("p",null,"Generate the site and copy it into the temporary directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ yarn build\n$ cp -rT build /tmp/build\n")),(0,r.kt)("p",null,"Notes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"we cannot use ",(0,r.kt)("inlineCode",{parentName:"li"},"yarn build --out-dir /tmp/build")," because this will remove the ",(0,r.kt)("inlineCode",{parentName:"li"},".git")," file inside that directory"),(0,r.kt)("li",{parentName:"ul"},"with the ",(0,r.kt)("inlineCode",{parentName:"li"},"-T")," option, ",(0,r.kt)("inlineCode",{parentName:"li"},"cp")," copies the contents ",(0,r.kt)("inlineCode",{parentName:"li"},"build")," directory into ",(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/build"),", as opposed to copying the ",(0,r.kt)("inlineCode",{parentName:"li"},"build")," directory itself"),(0,r.kt)("li",{parentName:"ul"},"there is a better way if you want to use a script, see the end of this section")),(0,r.kt)("p",null,"Push the files to GitHub:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},'$ cd /tmp/build\n$ git add .\n$ git commit -m "new build at $(date)"\n$ git push\n$ cd -\n')),(0,r.kt)("p",null,"Remove the temporary directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git worktree remove /tmp/build\n")),(0,r.kt)("p",null,"Here's a script to automate the whole process:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/sh\n\nTMPDIR="$(mktemp -d tmp-XXXXX)"\nTMPDIR2="$(mktemp -d tmp-XXXXX)"\n\ngit worktree add --force --no-checkout "${TMPDIR}" gh-pages\n\nmv "${TMPDIR}/.git" "${TMPDIR2}"\nyarn build --out-dir "${TMPDIR}"\nmv "${TMPDIR2}/.git" "${TMPDIR}"\nrmdir "${TMPDIR2}"\n\n(cd "${TMPDIR}"; git add .; git commit -m "new build at $(date)"; git push)\n\nls "${TMPDIR}"\ngit worktree remove "${TMPDIR}"\n')),(0,r.kt)("p",null,"Note: we use a custom template because there ",(0,r.kt)("a",{parentName:"p",href:"/blog/2021/06/13/possible-webpack-dirname-bug"},"might be a bug")," that causes ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn build")," to fail."),(0,r.kt)("h3",{id:"another-method-of-deploying-manually-doesnt-work-well"},"Another method of deploying manually doesn't work well"),(0,r.kt)("p",null,"After building the site, push the ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," directory to a new ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git subtree split -P build -b gh-pages\nCreated branch 'gh-pages'\nd7d2eaa20128724d8234c817151c16d0931dec98\n$ git push origin gh-pages\nEnumerating objects: 117, done.\nCounting objects: 100% (117/117), done.\nDelta compression using up to 4 threads\nCompressing objects: 100% (83/83), done.\nWriting objects: 100% (117/117), 322.93 KiB | 1.02 MiB/s, done.\nTotal 117 (delta 29), reused 54 (delta 8)\nremote: Resolving deltas: 100% (29/29), done.\nremote: \nremote: Create a pull request for 'gh-pages' on GitHub by visiting:\nremote:      https://github.com/wpyoga/wpyoga.github.io/pull/new/gh-pages\nremote: \nTo github.com:wpyoga/wpyoga.github.io.git\n * [new branch]      gh-pages -> gh-pages\n")),(0,r.kt)("p",null,"Because this repository is the special ",(0,r.kt)("inlineCode",{parentName:"p"},"_username_.github.io")," repository, GitHub doesn't treat the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch here as being special. So I need to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wpyoga/wpyoga.github.io/settings/pages"},"manually specify")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch to serve the site root."),(0,r.kt)("p",null,"The problem is, now I cannot update the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch. I need to read Docusaurus' source code in ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/deploy.ts")," and see how they manage to make ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn deploy")," work. Looking at the log output, it seems that Docusaurus clones the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch to a temporary location, deletes everything, overwrites the content with new files, and then pushes the changes back to the remote branch."),(0,r.kt)("h3",{id:"how-github-pages-really-works"},"How GitHub Pages really works"),(0,r.kt)("p",null,"I'm not 100% sure how it works."),(0,r.kt)("p",null,"Docusaurus mentions that ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/deployment#deploying-to-github-pages"},"GitHub will run the generated files through Jekyll"),", so a ",(0,r.kt)("inlineCode",{parentName:"p"},".nojekyll")," file is added to each directory, to prevent the removal of files whose names have a leading ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," (underscore)."),(0,r.kt)("p",null,'I\'ve also tried messing around with the designated repository, renaming index.html and adding README.md, but the Docusaurus site is still being served (a "page not found" message can be seen upon initial loading, but then disappears after a split second).'),(0,r.kt)("p",null,"Since this is a static site, index.php is not served (at all)."),(0,r.kt)("h3",{id:"serving-github-pages-from-a-subdirectory"},"Serving GitHub Pages from a subdirectory"),(0,r.kt)("p",null,"We can actually use a single branch for both the source code and generated content -- GitHub allows us to specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"/docs")," subdirectory as the content location. However, this is not easily adaptable to Docusaurus, where ",(0,r.kt)("inlineCode",{parentName:"p"},"docs")," stores Markdown files, and the generated content is actually in ",(0,r.kt)("inlineCode",{parentName:"p"},"build"),"."),(0,r.kt)("p",null,"Unfortunately, as of 2021-06-12, GitHub doesn't allow the use of any other subdirectory for this purpose."),(0,r.kt)("h3",{id:"following-github-conventions"},"Following GitHub conventions"),(0,r.kt)("p",null,"For the special repository, following GitHub's conventions is somewhat counterintuitive. You would usually have the source code in the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch, and in this case you cannot deploy to the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch since it will overwrite all the source code. In this case, the solution is to move the source code to another branch, say ",(0,r.kt)("inlineCode",{parentName:"p"},"source"),", work on that branch, and deploy to the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch."),(0,r.kt)("p",null,"I pushed the source code from the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch to the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," branch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git branch source\n$ git push --set-upstream origin source\n")),(0,r.kt)("p",null,"Then I would need to delete the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch. The problem is, GitHub didn't want to delete the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git push --delete origin master\nTo github.com:wpyoga/wpyoga.github.io.git\n ! [remote rejected] master (refusing to delete the current branch: refs/heads/master)\nerror: failed to push some refs to 'git@github.com:wpyoga/wpyoga.github.io.git'\n")),(0,r.kt)("p",null,'It turns out that GitHub just doesn\'t want to delete the default branch. Note that this concept of "default branch" is not from git, but rather from GitHub.'),(0,r.kt)("p",null,"Anyway, I changed the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wpyoga/wpyoga.github.io/settings/branches"},"default branch")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," for now, and now I can delete the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git push --delete origin master\nTo github.com:wpyoga/wpyoga.github.io.git\n - [deleted]         master\n")),(0,r.kt)("p",null,"Now, ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn deploy")," will push the generated content to the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch of the special repository."),(0,r.kt)("h3",{id:"moving-source-code-back-to-the-master-branch"},"Moving source code back to the master branch"),(0,r.kt)("p",null,"After I moved the source code from the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch to the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," branch, I found out that I can actually deploy to another branch instead.\nSo I wanted to move the source code back to the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch."),(0,r.kt)("p",null,"I deleted the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch, renamed the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," branch to ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),", and then pushed the changes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git branch -D master\nDeleted branch master (was 67c2b46).\n$ git branch -m source master\n$ git status\nOn branch master\nYour branch is up to date with 'origin/source'.\n$ git push origin HEAD\nTotal 0 (delta 0), reused 0 (delta 0)\nremote: \nremote: Create a pull request for 'master' on GitHub by visiting:\nremote:      https://github.com/wpyoga/wpyoga.github.io/pull/new/master\nremote: \nTo github.com:wpyoga/wpyoga.github.io.git\n * [new branch]      HEAD -> master\n")),(0,r.kt)("p",null,"At this point the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," branch was useless, so I changed the default branch to ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," again (on GitHub), then deleted the remote ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," branch:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git push --delete origin source\nTo github.com:wpyoga/wpyoga.github.io.git\n - [deleted]         source\n")),(0,r.kt)("p",null,"At this point the remote branch has been deleted, but the local repo still references the old one:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git status\nOn branch master\nYour branch is based on 'origin/source', but the upstream is gone.\n  (use \"git branch --unset-upstream\" to fixup)\n")),(0,r.kt)("p",null,"So I dutifully followed the recommendations:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ git branch --unset-upstream\n$ git push --set-upstream origin master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\nEverything up-to-date\n$ git status\nOn branch master\nYour branch is up to date with 'origin/master'.\n")),(0,r.kt)("h3",{id:"changing-usernames-or-organization-names"},"Changing usernames or organization names"),(0,r.kt)("p",null,"I used to have the username ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyh"),", but I changed it a few weeks ago."),(0,r.kt)("p",null,"When I had the username ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyh"),", if I had created a repository named ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyh.github.io"),", then GitHub would have made a subdomain for me: ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyh.github.io"),". This is a special repo, which serves as the source of the GitHub Pages site hosted at ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyh.github.io")," from its ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch by default."),(0,r.kt)("p",null,"When I changed my username from ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyh")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyoga"),", I would have had to rename the aforementioned repository to ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyoga.github.io"),". GitHub would have changed the custom subdomain to ",(0,r.kt)("inlineCode",{parentName:"p"},"wpyoga.github.io"),", and the old custom subdomain would have been deleted."))}c.isMDXComponent=!0}}]);